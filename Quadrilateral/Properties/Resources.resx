<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Rectangle" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQcAAADACAMAAAA+71YtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAB4UExURf///wAAAFRUVPj4+FFRUZKSkvz8/NjY2PHx8eTk5Nvb23Fxcb+/v4uLixoaGvT09Orq
        6tHR0cXFxbOzs6GhoZmZmYWFhWpqanp6enNzc9PT06ioqHx8fCIiIkFBQeDg4GRkZDU1NRMTE0VFRS0t
        LTg4OF1dXZ6engYi20kAAAPPSURBVHhe7dxtc+lQFIZhWyIhpKhQFKl66f//h2cn99KJnjGj55Sa5Lm+
        dM/E1Np3BemHtH5fNIls1Wxd17VVs6kD1AHqAHWAOkAdoA5QBwQusNVDmIft3xG6X3vmV9t7Veiap2N7
        rwrdMKiIXBLZ8raikRvd6ZkSV32iaHyhw/lln+vZ4tbu9z7Zc7ZArA4ldYA6QB2gDniwDq3z572hB+9w
        N+oAdYA64MoOtjD175Bf6LB+qqplB9ubudBhcO6h/jvyIwLbmcmuOi/qL7nqfbL+rvu8qD91gDpAHaAO
        UAeoA9QB6gB1gDpAHaAOUAeoA9QB6gB1gDpAHaAOUAeoA9QB6gB1gDpAHaAOUAeoA9QB6gB1gDpAHaAO
        UAeoA9QB6gB1gDpAHaAOUAeoA9QB6gB1gDpAHaAOUAeoA9QB6gB1gDpAHaAOUAeoAy51sEVjnN0HYxgn
        pd7O2SpJ7FBd2S7zgVvlLONha2K3KK2yx9eV7bJqYoe8duPOi9xNbVXVvA5JtUM8S0udvWORpjM7VFe2
        43Thwg6rWdwav/RLi7XrL1i+2OPr6rTjo9ucdjy2Q57eH6DvUVAHqAPUAeoAdYA6QB2gDlAHqAPUAeoA
        dYA6QB2gDlAHqAPUAeoAdYA6QB2gDlAHqAPUAeoAdYA6QB2gDlAHqAPUAeoAdYA6QB2gDlAHqAPUAeoA
        dYA6QB2gDlAHqAPUAeoAdYA6QB2gDlAHqAPUAeqA5nU4u0/OpwZ06HLXi5N5Uzv0HLe9MMcLHUbdM/XL
        0ju/1Ud+ocMXuR2ojy8dLr1PdocVgevZgfq4ssP5iaAOUAeoA+7XIbCfN/fYHbqua6tbUweoA9QB6gB1
        wJcO1113363D0A1t9UOiKAiC4bC4Vhyd9Hp5no9f4uV4PH4uDZ6zCx1sYdzIFv8tMuVsp5mSJI7jZeHZ
        PZezDQaDSeG1kBWm006nk6az2Wo1ny8W/RfvzTse2+1wt9sctvv9ev30/m5Xht+W2oRVoStGW34Gc69+
        MCYrRsuyj2kxV/EPjFlhxWR+Kj9UWIy1ORwO2+3/zvaP3t+f1uv99rDZ7Pw0Ydj2jsfj25tv118s5is/
        cpr6rp2O38fHx0eWvWaV229++uu6+9/5mfxQ3n6/324Ph81u54fzY/mp+v35fL7yyrn8YNOOm2Y+NMUL
        Rf/iL+H/IstlnPgXT573vOL17V/r/lo4OD+Ff9S0zHVqVUzGaAzlZyr5weLEj8ZY3a4/E03xyrdf9T2B
        u9sX64d2v8+Lx6YOUAeoA9QB6gB1gDogmtzw2+F1Wq0/AlpITqF6rXsAAAAASUVORK5CYII=
</value>
  </data>
</root>